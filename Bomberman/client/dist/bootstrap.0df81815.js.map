{"version":3,"sources":["src/engine/DeltaTracker.ts","src/engine/GameLoop.ts","src/engine/KeyListener.ts","src/engine/collision/CollisionHandler.ts","src/engine/EntityManager.ts","src/engine/ImageUtils.ts","src/engine/ImageCache.ts","src/engine/Game.ts","src/engine/Entity.ts","src/GameMap.ts","src/engine/SpriteSheet.ts","src/engine/Sprite.ts","src/engine/SpriteSheetSprite.ts","src/engine/Animation.ts","src/engine/Range.ts","src/Bomb.ts","src/Player.ts","src/TestBrick.ts","src/BombermanGame.ts","src/bootstrap.ts","node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","length","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"bootstrap.0df81815.js","sourceRoot":"..","sourcesContent":["\nclass DeltaTracker {\n\n  private lastTime: number | undefined\n\n  public getAndUpdateDelta() {\n    if (this.lastTime == null) {\n      this.lastTime = this.getTimestampMS()\n      return 0\n    }\n    \n    const currentTime = this.getTimestampMS()\n    // delta => time since last frame in seconds\n    const delta = (currentTime - this.lastTime) / 1000\n    this.lastTime = currentTime\n    return delta\n  }\n\n  private getTimestampMS() {\n    return (new Date()).getTime()\n  }\n  \n}\n\nexport default DeltaTracker\n","import DeltaTracker from \"./DeltaTracker\";\n\ntype GameUpdateFunction = (delta: number) => void;\ntype GameRenderFunction = () => void;\n\nclass GameLoop {\n\n  private renderFunction: GameRenderFunction\n  private updateFunction: GameUpdateFunction\n  private deltaTracker: DeltaTracker\n\n  constructor(\n    updateFunction: GameUpdateFunction,\n    renderFunction: GameRenderFunction\n  ) {\n    this.updateFunction = updateFunction\n    this.renderFunction = renderFunction\n    this.deltaTracker = new DeltaTracker()\n  }\n\n  public run() {\n    window.requestAnimationFrame(this.loop.bind(this))\n  }\n\n  private loop() {\n    const delta = this.deltaTracker.getAndUpdateDelta()\n    \n    this.updateFunction(delta)\n    this.renderFunction()\n    \n    window.requestAnimationFrame(this.loop.bind(this))\n  }\n  \n}\n\nexport default GameLoop\n","\nclass KeyListener {\n\n  private keyStates: {[key: string]: boolean} = {}\n\n  public setup(canvasEl: HTMLCanvasElement) {\n    canvasEl.addEventListener(\"keydown\", e => {\n      e.preventDefault()\n      this.keyStates[e.key] = true\n    })\n    canvasEl.addEventListener(\"keyup\", e => {\n      e.preventDefault()\n      this.keyStates[e.key] = false\n    })\n  }\n\n  public isKeyDown(key: string) {\n    return this.keyStates[key] === true\n  }\n\n  public isAnyKeyDown(keys: string[]) {\n    return keys.some(key => this.isKeyDown(key))\n  }\n  \n}\n\nexport default KeyListener\n","import Collidable from \"./Collidable\";\nimport Collision from \"./Collision\";\nimport CollisionBox from \"./CollisionBox\";\n\nclass CollisionHandler {\n\n  private collidables: Collidable[] = [];\n\n  public addCollidable(collidable: Collidable) {\n    this.collidables.push(collidable);\n  }\n\n  public testMovement(driverBox: CollisionBox, xMovement: number, yMovement: number) {\n    return this.findCollisions({\n      xPos: driverBox.xPos + xMovement,\n      yPos: driverBox.yPos + yMovement,\n      width: driverBox.width,\n      height: driverBox.height\n    });\n  }\n\n  public findCollisions(driverBox: CollisionBox): Collision[] {\n    let collisions: Collision[] = []\n\n    for (let collidable of this.collidables) {\n      const collision = this.findCollision(driverBox, collidable);\n      if (collision != null) {\n        collisions.push(collision);\n      }\n    }\n\n    return collisions;\n  }\n\n  private findCollision(driverBox: CollisionBox, brick: Collidable): null | Collision {\n    const brickBox = brick.getCollisionBox();\n\n    const rightCollision = driverBox.xPos < brickBox.xPos && driverBox.xPos + driverBox.width > brickBox.xPos;\n    const leftCollision = brickBox.xPos < driverBox.xPos && brickBox.xPos + brickBox.width > driverBox.xPos;\n\n    const topCollision = driverBox.yPos < brickBox.yPos && driverBox.yPos + driverBox.height > brickBox.yPos;\n    const bottomCollision = brickBox.yPos < driverBox.yPos && brickBox.yPos + brickBox.height > driverBox.yPos;\n\n    if ((rightCollision || leftCollision) && (topCollision || bottomCollision)) {\n      return {\n        with: brick,\n        top: topCollision,\n        bottom: bottomCollision,\n        left: leftCollision,\n        right: rightCollision\n      }\n    }\n    \n    return null;\n  }\n  \n}\n\nexport default CollisionHandler;\n","import Entity from \"./Entity\";\nimport { ImageCache } from \"./ImageCache\";\n\nexport class EntityManager {\n\n  private entities: Entity[] = []\n  private imageCache: ImageCache\n\n  constructor(imageCache: ImageCache) {\n    this.imageCache = imageCache\n  }\n\n  public addEntity(entity: Entity) {\n    if (!entity.hasBeenSetup) {\n      entity.runSetup(this.imageCache)\n    }\n    this.entities.push(entity)\n  }\n\n  public getEntities() {\n    return this.entities\n  }\n\n}\n","\nclass ImageUtils {\n\n  public static loadImageFromUrl(url: string): Promise<HTMLImageElement> {\n    return new Promise(resolve => {\n      const img = new Image()\n      img.onload = () => {\n        resolve(img)\n      }\n      img.src = url\n    })\n  }\n  \n}\n\nexport default ImageUtils\n","import ImageUtils from \"./ImageUtils\";\n\nexport class ImageCache {\n\n  private preloads: Record<string, HTMLImageElement> = {}\n\n  public async preloadImage(name: string, url: string) {\n    const img = await ImageUtils.loadImageFromUrl(url)\n    this.preloads[name] = img\n  }\n\n  public async preloadImages(urls: Record<string, string>) {\n    const promises = Object.entries(urls).map(([name, url]) => {\n      return this.preloadImage(name, url)\n    })\n    await Promise.all(promises)\n  }\n\n  public getPreloaded(name: string): HTMLImageElement {\n    return this.preloads[name]\n  }\n\n}\n","import GameLoop from \"./GameLoop\"\nimport { GameData } from \"./types\"\nimport KeyListener from \"./KeyListener\"\nimport Entity from \"./Entity\"\nimport CollisionHandler from \"./collision/CollisionHandler\"\nimport Collidable from \"./collision/Collidable\"\nimport { EntityManager } from \"./EntityManager\"\nimport { ImageCache } from \"./ImageCache\"\n\nabstract class Game {\n\n  private canvasEl: HTMLCanvasElement\n  private gameData: GameData\n\n  constructor(canvasEl: HTMLCanvasElement) {\n    this.canvasEl = canvasEl\n    const imageCache = new ImageCache()\n    this.gameData = {\n      context: canvasEl.getContext(\"2d\"),\n      screenWidth: canvasEl.width,\n      screenHeight: canvasEl.height,\n      keyListener: new KeyListener(),\n      collisionHandler: new CollisionHandler(),\n      entityManager: new EntityManager(imageCache),\n      imageCache: imageCache\n    }\n  }\n\n  public async run() {\n    this.gameData.keyListener.setup(this.canvasEl)\n\n    await this.preload(this.gameData.imageCache)\n    this.setup(this.gameData)\n\n    \n    const gameLoop = new GameLoop(\n      this.update.bind(this),\n      this.render.bind(this)\n    )\n    gameLoop.run()\n  }\n\n  public addEntity(entity: Entity) {\n    this.gameData.entityManager.addEntity(entity)\n\n    // TODO: add this again\n    // if (this.isCollidable(entity)) {\n    //   this.gameData.collisionHandler.addCollidable(entity);\n    // }\n  }\n\n  protected abstract preload(imageCache: ImageCache): Promise<void>\n  protected abstract setup(gameData: GameData): void\n\n  // private async setupEntities() {\n  //   let promises = this.gameData.entityManager.getEntities().map(e => e.setup(this.gameData))\n  //   return Promise.all(promises)\n  // }\n\n  private update(delta: number) {\n    this.gameData.entityManager.getEntities().forEach(e => e.update(this.gameData, delta))\n  }\n\n  private render() {\n    this.gameData.entityManager.getEntities().forEach(e => e.render(this.gameData))\n  }\n\n  private isCollidable(entity: Entity | Collidable): entity is Collidable {\n    return (entity as Collidable).getCollisionBox !== undefined;\n  }\n\n}\n\nexport default Game\n","import { ImageCache } from \"./ImageCache\";\nimport { GameData } from \"./types\";\n\nabstract class Entity {\n\n  public hasBeenSetup: boolean = false;\n\n  public async runSetup(imageCache: ImageCache): Promise<void> {\n    this.hasBeenSetup = true;\n    await this.setup(imageCache)\n  }\n\n  public setup(imageCache: ImageCache): void {}\n  public update(gameData: GameData, delta: number): void {}\n  public abstract render(gameData: GameData): void;\n\n}\n\nexport default Entity\n","import { GameData } from \"./engine/types\"\nimport Entity from \"./engine/Entity\"\nimport ImageUtils from \"./engine/ImageUtils\"\nimport { ImageCache } from \"./engine/ImageCache\"\n\nclass GameMap extends Entity {\n\n  private tileImage: HTMLImageElement\n\n  constructor() {\n    super()\n  }\n\n  public setup(imageCache: ImageCache) {\n    this.tileImage = imageCache.getPreloaded(\"bg\")\n  }\n\n  public render({ context, screenHeight, screenWidth }: GameData) {\n    const tileSize = 64\n    \n    const tileCountX = Math.ceil(screenWidth / tileSize)\n    const tileCountY = Math.ceil(screenHeight / tileSize)\n\n    for (let y = 0; y < tileCountY; y++) {\n      for (let x = 0; x < tileCountX; x++) {\n        context.drawImage(this.tileImage, x * tileSize, y * tileSize, tileSize, tileSize)\n      }\n    }\n  }\n  \n}\n\nexport default GameMap\n","import { GameData } from \"./types\"\n\nclass SpriteSheet {\n\n  private image: HTMLImageElement\n  private spriteWidth: number\n  private spriteHeight: number\n\n  constructor(image: HTMLImageElement, spriteWidth: number, spriteHeight: number) {\n    this.image = image\n    this.spriteWidth = spriteWidth\n    this.spriteHeight = spriteHeight\n  }\n\n  public render(\n    { context }: GameData,\n    xCount: number,\n    yCount: number,\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n    { flippedX = false }: { flippedX?: boolean } = {}\n  ) {\n    let renderedX = x\n    \n    if (flippedX) {\n      context.save()\n      context.scale(-1, 1)\n      renderedX = -(x + width)\n    }\n\n    context.drawImage(\n      this.image,\n      xCount * this.spriteWidth,\n      yCount * this.spriteHeight,\n      this.spriteWidth,\n      this.spriteHeight,\n      renderedX,\n      y,\n      width,\n      height\n    )\n\n    if (flippedX) {\n      context.restore()\n    }\n  }\n  \n}\n\nexport default SpriteSheet\n","import { GameData } from \"./types\";\n\nabstract class Sprite {\n\n  public update(gameData: GameData, delta: number) {}\n\n  public abstract render(\n    gameData: GameData,\n    x: number,\n    y: number,\n    width: number,\n    height: number\n  ): void;\n\n}\n\nexport default Sprite\n","import SpriteSheet from \"./SpriteSheet\"\nimport { GameData } from \"./types\"\nimport Sprite from \"./Sprite\"\n\nclass SpriteSheetSprite extends Sprite {\n\n  private spriteSheet: SpriteSheet\n  private xCount: number\n  private yCount: number\n  private flippedX: boolean\n\n  constructor(\n    spriteSheet: SpriteSheet,\n    xCount: number,\n    yCount: number,\n    { flippedX = false}: { flippedX?: boolean } = {}\n  ) {\n    super()\n    this.spriteSheet = spriteSheet\n    this.xCount = xCount\n    this.yCount = yCount\n    this.flippedX = flippedX\n  }\n\n  render(gameData: GameData, x: number, y: number, width: number, height: number): void {\n    this.spriteSheet.render(\n      gameData,\n      this.xCount,\n      this.yCount,\n      x,\n      y,\n      width,\n      height,\n      { flippedX: this.flippedX }\n    )\n  }\n  \n}\n\nexport default SpriteSheetSprite\n","import SpriteSheet from \"./SpriteSheet\"\nimport { GameData } from \"./types\"\nimport Sprite from \"./Sprite\"\n\ntype Frame = [number, number]\n\nclass Animation extends Sprite {\n\n  private spriteSheet: SpriteSheet\n  private frames: Frame[]\n  private msPerFrame: number\n  private flippedX: boolean\n\n  private currentFrameIndex: number = 0\n  private msInCurrentFrame: number = 0\n\n  constructor(\n    spriteSheet: SpriteSheet,\n    frames: [number, number][],\n    msPerFrame: number,\n    { flippedX = false }: { flippedX?: boolean } = {}\n  ) {\n    super()\n    this.spriteSheet = spriteSheet\n    this.frames = frames\n    this.msPerFrame = msPerFrame\n    this.flippedX = flippedX\n  }\n\n  public update(\n    gameData: GameData,\n    delta: number\n  ) {\n    this.msInCurrentFrame += delta * 1000\n    if (this.msInCurrentFrame >= this.msPerFrame) {\n      this.msInCurrentFrame -= this.msPerFrame\n      this.currentFrameIndex ++\n      if (this.currentFrameIndex >= this.frames.length) {\n        this.currentFrameIndex = 0\n      }\n    }\n  }\n\n  public render(\n    gameData: GameData,\n    x: number,\n    y: number,\n    width: number,\n    height: number\n  ) {\n    const currentFrame = this.frames[this.currentFrameIndex]\n    this.spriteSheet.render(\n      gameData,\n      currentFrame[0],\n      currentFrame[1],\n      x,\n      y,\n      width,\n      height,\n      { flippedX: this.flippedX }\n    )\n  }\n  \n}\n\nexport default Animation\n","\nclass Range {\n\n  public static rowRange(rowNumber: number, colCount: number): [number, number][] {\n    return Array.from(new Array(colCount), (x, i) => [i, rowNumber])\n  }\n  \n}\n\nexport default Range\n","import Entity from \"./engine/Entity\";\nimport { ImageCache } from \"./engine/ImageCache\";\nimport ImageUtils from \"./engine/ImageUtils\";\nimport Sprite from \"./engine/Sprite\";\nimport SpriteSheet from \"./engine/SpriteSheet\";\nimport SpriteSheetSprite from \"./engine/SpriteSheetSprite\";\nimport { GameData } from \"./engine/types\";\n\nexport class Bomb extends Entity {\n\n  private sprite: Sprite;\n\n  public setup(imageCache: ImageCache) {\n    const sheetImage = imageCache.getPreloaded(\"bomb\")\n    const sheet = new SpriteSheet(sheetImage, 48, 48)\n    this.sprite = new SpriteSheetSprite(sheet, 0, 0) \n  }\n\n  public render(gameData: GameData): void {\n    this.sprite.render(gameData, 100, 100, 48, 48)\n  }\n\n}\n","import { GameData } from \"./engine/types\"\nimport Sprite from \"./engine/Sprite\"\nimport ImageUtils from \"./engine/ImageUtils\"\nimport ImageSprite from \"./engine/ImageSprite\"\nimport SpriteSheet from \"./engine/SpriteSheet\"\nimport SpriteSheetSprite from \"./engine/SpriteSheetSprite\"\nimport Animation from \"./engine/Animation\"\nimport Range from \"./engine/Range\"\nimport Entity from \"./engine/Entity\"\nimport CollisionBox from \"./engine/collision/CollisionBox\"\nimport { Bomb } from \"./Bomb\"\nimport { ImageCache } from \"./engine/ImageCache\"\n\nclass Player extends Entity {\n\n  private sprites: {[direction: string]: Sprite} = {}\n\n  private xPos = 0\n  private yPos = 0\n  private width: number\n  private height: number\n\n  private speed = 150\n  private velX = 0\n  private velY = 0\n\n  public setup(imageCache: ImageCache) {\n    const spriteSheetImage = imageCache.getPreloaded(\"player\")\n    const spriteSheet = new SpriteSheet(spriteSheetImage, 64, 128)\n\n    this.sprites = {\n      idle: new SpriteSheetSprite(spriteSheet, 0, 0),\n      forward: new Animation(spriteSheet, Range.rowRange(0, 8), 100),\n      backward: new Animation(spriteSheet, Range.rowRange(1, 8), 100),\n      right: new Animation(spriteSheet, Range.rowRange(2, 8), 100),\n      left: new Animation(spriteSheet, Range.rowRange(2, 8), 100, { flippedX: true })\n    }\n    \n    this.width = 64\n    this.height = 128\n  }\n\n  public update(gameData: GameData, delta: number) {\n    const { keyListener } = gameData\n\n\n    this.velX = 0\n    this.velY = 0\n\n    if (keyListener.isAnyKeyDown([\"d\", \"ArrowRight\"])) {\n      this.velX = this.speed * delta\n    } else if (keyListener.isAnyKeyDown([\"q\", \"a\", \"ArrowLeft\"])) {\n      this.velX = -(this.speed * delta)\n    }\n    \n    if (keyListener.isAnyKeyDown([\"s\", \"ArrowDown\"])) {\n      this.velY = this.speed * delta\n    } else if (keyListener.isAnyKeyDown([\"z\", \"w\", \"ArrowUp\"])) {\n      this.velY = -(this.speed * delta)\n    }\n\n    if (keyListener.isKeyDown(\" \")) {\n      const bomb = new Bomb();\n      gameData.entityManager.addEntity(bomb);\n    }\n\n    this.calculateCollision(gameData);\n\n    this.xPos += this.velX\n    this.yPos += this.velY\n\n    this.getMovingSprite().update(gameData, delta)\n  }\n\n  public render(gameData: GameData) {\n    this.getMovingSprite().render(gameData, this.xPos, this.yPos, this.width, this.height)\n  }\n\n  private calculateCollision({ collisionHandler }: GameData) {\n    const collisionBox: CollisionBox = {\n      xPos: this.xPos + 10,\n      yPos: this.yPos + 110,\n      width: this.width - 20,\n      height: this.height - 115\n    };\n\n    const collisionsX = collisionHandler.testMovement(collisionBox, this.velX, 0);\n    if (collisionsX.length > 0) {\n      // TODO: move the distance you're still allowed\n      this.velX = 0;\n    }\n\n    const collisionsY = collisionHandler.testMovement(collisionBox, 0, this.velY);\n    if (collisionsY.length > 0) {\n      // TODO: move the distance you're still allowed\n      this.velY = 0;\n    }\n  }\n\n  private getMovingSprite() {\n    if (this.velX === 0 && this.velY === 0) return this.sprites[\"idle\"]\n    if (this.velX > 0) return this.sprites[\"right\"]\n    if (this.velX < 0) return this.sprites[\"left\"]\n    if (this.velY < 0) return this.sprites[\"backward\"]\n    return this.sprites[\"forward\"]\n  }\n  \n}\n\nexport default Player\n","import Collidable from \"./engine/collision/Collidable\";\nimport CollisionBox from \"./engine/collision/CollisionBox\";\nimport Entity from \"./engine/Entity\";\nimport { ImageCache } from \"./engine/ImageCache\";\nimport ImageUtils from \"./engine/ImageUtils\";\nimport SpriteSheet from \"./engine/SpriteSheet\";\nimport { GameData } from \"./engine/types\";\n\nclass TestBrick extends Entity implements Collidable {\n  private sheet: SpriteSheet;\n\n  public setup(imageCache: ImageCache) {\n    const img = imageCache.getPreloaded(\"blocks\")\n    this.sheet = new SpriteSheet(img, 64, 64)\n  }\n\n  public render(gameData: GameData): void {\n    this.sheet.render(gameData, 1, 0, 128, 128, 64, 64);\n  }\n\n  public getCollisionBox(): CollisionBox {\n    return {\n      xPos: 128,\n      yPos: 128,\n      width: 64,\n      height: 64\n    }\n  }\n\n}\n\nexport default TestBrick;","import Game from \"./engine/Game\";\nimport ImageUtils from \"./engine/ImageUtils\";\nimport GameMap from \"./GameMap\"\nimport Player from \"./Player\"\nimport { GameData } from \"./engine/types\";\nimport TestBrick from \"./TestBrick\";\nimport { ImageCache } from \"./engine/ImageCache\";\n\nclass BombermanGame extends Game {\n\n  protected async preload(imageCache: ImageCache): Promise<void> {\n    await imageCache.preloadImages({\n      blocks: \"http://localhost:4000/static/blocks.png\",\n      player: \"http://localhost:4000/static/player_spritesheet.png\",\n      bg: \"http://localhost:4000/static/bg.png\",\n      bomb: \"http://localhost:4000/static/bomb.png\"\n    })\n  }\n\n  protected async setup(gameData: GameData) {\n    this.addEntity(new GameMap())\n    this.addEntity(new TestBrick())\n    this.addEntity(new Player())\n    // this.addEntity(new Bomb())\n  }\n  \n}\n\nexport default BombermanGame\n","import BomermanGame from \"./BombermanGame\"\n\nasync function bootstrap() {\n  const canvasEl = document.getElementById(\"game-canvas\") as HTMLCanvasElement | undefined\n  if (canvasEl == null) {\n    console.log(\"Couldn't find the canvas element\")\n    return\n  }\n\n  canvasEl.focus()\n\n  const game = new BomermanGame(canvasEl)\n  game.run()\n}\n\nbootstrap()\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}