{"version":3,"sources":["src/imageUtils.ts","src/GameMap.ts","src/DeltaTracker.ts","src/GameLoop.ts","src/Game.ts","src/bootstrap.ts"],"names":[],"mappings":";;;;;;AEAA,ADAA,ADAA,IEAA,ADAA,ADAA,OCAA,GDAA,EEAA;AAAA,ADAA,ADAA;AEAA,ADAA,ADAA,YEAA,ADAA,ADAA;AEAA,ADMI,ADNJ,WEAA,ADMI,ADNJ,OCMI,CAAY,EDNhB,EEAA,CFAA,CAWC,CEXD,CAwBC,CDlBG,EAAyC,KAAzC,EAAuD,MAAvD,EAAoE;AAChE,SAAK,SAAL,GAAiB,SAAjB;ACHG,ADIH,ADPU,EEGP,AFHO,OCOL,GDPK,CAAA,CEGP,ADIH,CCJG,EDIU,KAAb,ECJG,CAAA,IFHO,GAAd,UEGO,AFHwB,GEG/B,AFHA,EAA0C,UEG1C;AAEI,ACNR,AFSQ,ADPA,IGFR,IDMW,CDGE,EDPE,EEIC,EDGR,ADPW,GGFnB,AFSsB,GCHX,ACNX,CHEe,CAAY,CCOnB,CCHoB,IAApB,EAAyB,EFJN,GGF3B,CAAA,GHE2B,EAAO,EGFlC,CAAA,gBAAA,CAAA,CAAA;ADOY,ADGP,ADPO,UAAM,CEID,EFJI,GAAG,GEIZ,CFJgB,EEIA,GFJJ,EEIS,AFJrB,cEIgB,EAAhB;AACA,ACJZ,AHAgB,IGAhB,EHAgB,GAAG,CAAC,EGApB,CDImB,AFJH,CEIJ,EFJc,GAAV;AEKP,ACLT,AFQW,EAAA,OAAA,CAAA,SAAA,CAAA,MAAA,GAAP,UAAc,OAAd,EAA8C;AERlD,AFUQ,ADTQ,MAAA,ECSF,CDTK,CAAC,EGDpB,IFUsB,ADTN,GCSS,ADTI,ECSrB,UDTqB;AEMrB,ACFJ,AFMI,ADTQ,QEKF,ADIA,ADTE,GGGZ,IHHmB,CAAC,ECSA,CCJC,ACFrB,AHHmB,CGGP,AHHA,CCSW,CCJC,GDIG,CAAC,CCJC,GDIN,CAAU,CENjC,EAA0C,EFMJ,KCJd,ADIS,ECJ7B,CAPJ,ADW4C,CCHxC,ODGmB,CAAnB;AELA,AFMA,ADTK,OAFG,CCWF,CEND,SFMW,GENhB,AFMmB,GENC,CFMG,CAAC,IAAL,CAAU,KEN7B,AFMkC,MAAL,GAAY,QAAtB,CAAnB;ACHA,ACFA,QDEM,CCFD,IDEM,GAAG,CAAC,ICFf,GAAoB,IDEM,ACFF,GDEK,KAAK,MCFV,CAAA,CDEV,IAAgC,ECF1B,EDEpB,ACFA;ADG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","file":"bootstrap.0df81815.js","sourceRoot":"..","sourcesContent":["class imageUtils{\r\n    public static loadImageFromUrl(url: string): Promise<HTMLImageElement>{\r\n        return new Promise(resolve => {\r\n            const img = new Image()\r\n                img.src = url\r\n                img.onload = () => {\r\n                resolve(img)\r\n            }\r\n            img.src = url\r\n        })\r\n    }\r\n}\r\n\r\nexport default imageUtils","class GameMap{\r\n\r\n    private tileImage: HTMLImageElement\r\n    private width: number\r\n    private height: number\r\n\r\n    constructor(tileImage: HTMLImageElement, width:number, height:number){\r\n        this.tileImage = tileImage\r\n        this.width = width\r\n        this.height = height\r\n    }\r\n\r\n    public render(context:CanvasRenderingContext2D){\r\n    \r\n        const tileSize = 64\r\n        const tileCountX = Math.ceil(this.width/tileSize)\r\n        const tileCountY = Math.ceil(this.height/tileSize)\r\n        \r\n        for(let y=0; y<tileCountY; y++){\r\n            for(let x=0; x<tileCountX; x++){\r\n                context.drawImage(this.tileImage, x*tileSize, y*tileSize, tileSize, tileSize)\r\n            }\r\n        }\r\n    \r\n    }\r\n}\r\n\r\nexport default GameMap\r\n","class Deltatracker{\r\n\r\n    private lastTime: number | undefined\r\n    \r\n    public getAndUpdateDelta(){\r\n\r\n        if(this.lastTime == null){\r\n            this.lastTime = this.getTimestampMS()\r\n            return 0\r\n        }\r\n\r\n        const currentTime = this.getTimestampMS()\r\n        //Delta is the time since last frame seconds\r\n        const delta = (currentTime - this.lastTime) / 1000\r\n        this.lastTime = currentTime\r\n\r\n        return delta\r\n\r\n    }\r\n\r\n    private getTimestampMS(){\r\n        return (new Date()).getTime()\r\n    }\r\n\r\n}\r\n\r\nexport default Deltatracker","import Deltatracker from  \"./DeltaTracker\"\r\n\r\ntype GameLoopFunction = (delta: number) => void;\r\n\r\nclass GameLoop{\r\n\r\n    private loopFunction: GameLoopFunction\r\n    private deltaTracker: Deltatracker\r\n    \r\n    constructor(loopFunction: GameLoopFunction){\r\n        this.loopFunction = loopFunction\r\n        this.deltaTracker = new Deltatracker()\r\n    }\r\n\r\n    public run(){\r\n        window.requestAnimationFrame(this.loop.bind(this))\r\n    }\r\n\r\n    private loop(){\r\n        const delta = this.deltaTracker.getAndUpdateDelta()\r\n\r\n        this.loopFunction(delta)\r\n\r\n        window.requestAnimationFrame(this.loop.bind(this))\r\n    }\r\n\r\n}\r\n\r\nexport default GameLoop","import imageUtils from \"./imageUtils\"\r\nimport GameMap from \"./GameMap\"\r\nimport GameLoop from \"./GameLoop\"\r\n\r\nclass Game{\r\n\r\n    private context: CanvasRenderingContext2D\r\n    private width: number\r\n    private height: number\r\n\r\n    private map: GameMap\r\n    private charImage: HTMLImageElement\r\n    private charX = 0\r\n    private charY = 0\r\n\r\n    constructor(context:CanvasRenderingContext2D, width:number, height:number){\r\n        this.context = context\r\n        this.width = width\r\n        this.height = height\r\n    }\r\n\r\n    public async run(){\r\n        const img =  await imageUtils.loadImageFromUrl(\"http://localhost:4000/static/bg.png\")\r\n        \r\n        this.map = new GameMap(img, this.width, this.height)\r\n\r\n        this.charImage = await imageUtils.loadImageFromUrl(\"http://localhost:4000/static/player_f00.png\")\r\n\r\n        const gameLoop = new GameLoop(this.loop.bind(this))\r\n        gameLoop.run()\r\n        \r\n    }\r\n\r\n    private loop(delta:number){\r\n        \r\n        this.map.render(this.context)\r\n\r\n        this.charX += 30 * delta\r\n        this.charY += 30 * delta\r\n        this.context.drawImage(this.charImage,this.charX,this.charY)\r\n    }\r\n}\r\n\r\nexport default Game","import Game from \"./Game\"\r\n\r\nasync function bootstrap(){\r\n    const canvasEl = document.getElementById(\"game-canvas\") as HTMLCanvasElement | undefined\r\n    if (canvasEl == null){\r\n        console.log(\"Couldn't find the canvas elment\")\r\n        return\r\n    }\r\n    \r\n    const context = canvasEl.getContext(\"2d\")\r\n\r\n    const game = new Game(context,canvasEl.width, canvasEl.height)\r\n    game.run()\r\n\r\n}\r\n\r\nbootstrap()"]}