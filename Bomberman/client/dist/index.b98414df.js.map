{"mappings":"SAAS,gBAAgB,CAAC,GAAW,EAA4B,CAAC;IAC9D,MAAM,CAAC,GAAG,CAAC,OAAO,EAAC,OAAO,GAAI,CAAC;QAC3B,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,KAAK;QACjB,GAAG,CAAC,GAAG,GAAG,GAAG;QACb,GAAG,CAAC,MAAM,OAAS,CAAC;YACpB,OAAO,CAAC,GAAG;QACf,CAAC;QACD,GAAG,CAAC,GAAG,GAAG,GAAG;IACjB,CAAC;AACL,CAAC;eAEc,GAAG,GAAE,CAAC;IACjB,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC,cAAc,CAAC,CAAa;IACtD,EAAE,EAAE,QAAQ,IAAI,IAAI,EAAC,CAAC;QAClB,OAAO,CAAC,GAAG,CAAC,CAAiC;QAC7C,MAAM;IACV,CAAC;IACD,KAAK,CAAC,OAAO,GAAG,QAAQ,CAAC,UAAU,CAAC,CAAI;IACxC,KAAK,CAAC,GAAG,GAAI,KAAK,CAAC,gBAAgB,CAAC,CAAqC;IAEzE,OAAO,CAAC,OAAO,EAAC,GAAG,EAAC,QAAQ,CAAC,KAAK,EAAC,QAAQ,CAAC,MAAM;AACtD,CAAC;SAEQ,OAAO,CAAC,OAAiC,EAAC,SAA0B,EAAE,KAAY,EAAE,MAAa,EAAC,CAAC;IACxG,KAAK,CAAC,QAAQ,GAAG,EAAE;IACnB,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,QAAQ;IAC7C,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,QAAQ;IAE9C,GAAG,CAAE,GAAG,CAAC,CAAC,GAAC,CAAC,EAAE,CAAC,GAAG,UAAU,EAAE,CAAC,GAC3B,GAAG,CAAE,GAAG,CAAC,CAAC,GAAC,CAAC,EAAE,CAAC,GAAG,UAAU,EAAE,CAAC,GAC3B,OAAO,CAAC,SAAS,CAAC,SAAS,EAAC,CAAC,GAAC,QAAQ,EAAC,CAAC,GAAC,QAAQ,EAAC,QAAQ,EAAC,QAAQ;AAK/E,CAAC;AAED,GAAG","sources":["client/src/game.ts"],"sourcesContent":["function loadImageFromUrl(url: string): Promise<HTMLImageElement>{\r\n    return new Promise(resolve => {\r\n        const img = new Image()\r\n            img.src = url\r\n            img.onload = () => {\r\n            resolve(img)\r\n        }\r\n        img.src = url\r\n    })\r\n}\r\n\r\nasync function run(){\r\n    const canvasEl = document.getElementById(\"game-canvas\") as HTMLCanvasElement | undefined\r\n    if (canvasEl == null){\r\n        console.log(\"Couldn't find the canvas elment\")\r\n        return\r\n    }\r\n    const context = canvasEl.getContext(\"2d\")\r\n    const img =  await loadImageFromUrl(\"http://localhost:4000/static/bg.png\")\r\n\r\n    drawMap(context,img,canvasEl.width,canvasEl.height)\r\n}\r\n\r\nfunction drawMap(context: CanvasRenderingContext2D,tileImage:HTMLImageElement, width:number, height:number){\r\n    const tileSize = 64\r\n    const tileCountX = Math.ceil(width / tileSize)\r\n    const tileCountY = Math.ceil(height / tileSize)\r\n\r\n    for (let y=0; y < tileCountY; y++){\r\n        for (let x=0; x < tileCountX; x++){\r\n            context.drawImage(tileImage,x*tileSize,y*tileSize,tileSize,tileSize)\r\n\r\n        }\r\n    }\r\n\r\n}\r\n\r\nrun()"],"names":[],"version":3,"file":"index.b98414df.js.map","sourceRoot":"/__parcel_source_root/"}